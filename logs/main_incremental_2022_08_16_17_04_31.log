ERROR:root: error - my name is mahesh
INFO:root:to find expected files these are expected hours 260
INFO:root:these are expected files ['E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-05\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-05\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=18\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=19\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=20\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=18\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=19\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=20\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-07\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=18\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=19\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=20\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-08\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=18\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=19\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=20\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-09\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=18\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=19\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=20\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-10\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=18\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=19\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=20\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-11\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=18\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=19\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=20\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-12\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=18\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=19\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=20\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-13\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=18\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=19\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=20\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-14\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=18\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=19\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=20\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-15\\hr=23\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=00\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=01\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=02\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=04\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=06\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=07\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=08\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=09\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=11\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=14\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=16\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-16\\hr=17\\emp_data.csv']
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:From these basepath need to fetch all the files E:\DATA\EDM\incremental
INFO:root:these are files on disk['E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-06-30\\hr=03\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-07-25\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-07-29\\hr=13\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-07-30\\hr=10\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-07-31\\hr=05\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-01\\hr=17\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-02\\hr=12\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-03\\hr=15\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-04\\hr=22\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-05\\hr=21\\emp_data.csv', 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=21\\emp_data.csv']
INFO:root:these are files to be processed['E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=21\\emp_data.csv']
INFO:root:this file is processingE:\DATA\EDM\incremental\hourly\dt=2022-08-06\hr=21\emp_data.csv
INFO:root:this is the variable dictionary{'file_fullpath': 'E:\\DATA\\EDM\\incremental\\hourly\\dt=2022-08-06\\hr=21\\emp_data.csv', 'file_name': 'emp_data.csv', 'dt': '2022-08-06', 'hr': '21', 'date_time': '2022-08-06 21:00:00'}
INFO:root:FILE_LOAD :: Executing SQL file  :insert_temp_emp_tbl_inc.sqlfor load dated : 2022-08-06 21:00:00
INFO:root:This is info message -- read_csv_file -- E:\DATA\EDM\incremental\hourly\dt=2022-08-06\hr=21\emp_data.csv
INFO:root:reading data/csv file['112, Sunil_man,  Male, 1976-06-20, 46, Subbarayudu, 2500,  RPD,  AP, 7123455920, 4, 2014-10-05 10:00:00\n', '113, Suresh,  Male, 1998-06-20, 26, Subbarayudu, 5000,  RPD,  AP, 7123455841, 1, 2017-01-01 10:00:00\n', '101, Mahesh, Male,1998-06-20,24, Srinivasulu,500, NKBD, AP,7123456789,1, 2020-06-20 10:00:00\n', '102, Guru, Male,1996-06-20,26, Srinivasulu,1000, CBM, AP,7123456710,2, 2015-10-05 10:00:00']
INFO:root:This is info message -- file_read_sql -- D:\Project_EDM\SQL\incremental\file_load\insert_temp_emp_tbl_inc.sql
INFO:root:reading sql file/query


Insert into temp_emp_table_inc 
(
	emp_id, 
	name, 
	gender, 
	dob, 
	age, 
	father_name, 
	salary, 
	city, 
	state, 
	phno, 
	company_id, 
	creation_timestamp
)
VALUES
(
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?
);



INFO:root:Inserting data into temp table from csv file


Insert into temp_emp_table_inc 
(
	emp_id, 
	name, 
	gender, 
	dob, 
	age, 
	father_name, 
	salary, 
	city, 
	state, 
	phno, 
	company_id, 
	creation_timestamp
)
VALUES
(
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?
);


['112', ' Sunil_man', '  Male', ' 1976-06-20', ' 46', ' Subbarayudu', ' 2500', '  RPD', '  AP', ' 7123455920', ' 4', ' 2014-10-05 10:00:00']
INFO:root:Inserting data into temp table from csv file


Insert into temp_emp_table_inc 
(
	emp_id, 
	name, 
	gender, 
	dob, 
	age, 
	father_name, 
	salary, 
	city, 
	state, 
	phno, 
	company_id, 
	creation_timestamp
)
VALUES
(
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?
);


['113', ' Suresh', '  Male', ' 1998-06-20', ' 26', ' Subbarayudu', ' 5000', '  RPD', '  AP', ' 7123455841', ' 1', ' 2017-01-01 10:00:00']
INFO:root:Inserting data into temp table from csv file


Insert into temp_emp_table_inc 
(
	emp_id, 
	name, 
	gender, 
	dob, 
	age, 
	father_name, 
	salary, 
	city, 
	state, 
	phno, 
	company_id, 
	creation_timestamp
)
VALUES
(
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?
);


['101', ' Mahesh', ' Male', '1998-06-20', '24', ' Srinivasulu', '500', ' NKBD', ' AP', '7123456789', '1', ' 2020-06-20 10:00:00']
INFO:root:Inserting data into temp table from csv file


Insert into temp_emp_table_inc 
(
	emp_id, 
	name, 
	gender, 
	dob, 
	age, 
	father_name, 
	salary, 
	city, 
	state, 
	phno, 
	company_id, 
	creation_timestamp
)
VALUES
(
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?,
	?
);


['102', ' Guru', ' Male', '1996-06-20', '26', ' Srinivasulu', '1000', ' CBM', ' AP', '7123456710', '2', ' 2015-10-05 10:00:00']
INFO:root:TABLE_LOAD :: Executing SQL file  :insert_raw_emp_tbl_inc.sqlfor load dated : 2022-08-06 21:00:00
INFO:root:This is info message -- file_read_sql -- D:\Project_EDM\SQL\incremental\table_load\insert_raw_emp_tbl_inc.sql
INFO:root:reading sql file/query


delete  from raw_emp_table_inc
where dt = '{dt}' and hr = '{hr}' ;



Insert into raw_emp_table_inc
(
	emp_id, 
	name,
	gender, 
	dob, 
	age, 
	father_name, 
	salary, 
	city, 
	[state], 
	phno, 
	company_id, 
	creation_timestamp, 
	record_audit_ts_raw, 
	file_path, 
	[file_name], 
	dt, 
	hr
) 
select 
	emp_id, 
	name, 
	gender, 
	dob, 
	age, 
	father_name, 
	salary, 
	city, 
	[state], 
	phno, 
	company_id, 
	creation_timestamp, 
	getdate(),
	'{file_fullpath}',
	'{file_name}',
	'{dt}', 
	'{hr}'

from temp_emp_table_inc;


Truncate table temp_emp_table_inc ;



	


INFO:root:Inserting data into  table


delete  from raw_emp_table_inc
where dt = '2022-08-06' and hr = '21' ;



Insert into raw_emp_table_inc
(
	emp_id, 
	name,
	gender, 
	dob, 
	age, 
	father_name, 
	salary, 
	city, 
	[state], 
	phno, 
	company_id, 
	creation_timestamp, 
	record_audit_ts_raw, 
	file_path, 
	[file_name], 
	dt, 
	hr
) 
select 
	emp_id, 
	name, 
	gender, 
	dob, 
	age, 
	father_name, 
	salary, 
	city, 
	[state], 
	phno, 
	company_id, 
	creation_timestamp, 
	getdate(),
	'E:\DATA\EDM\incremental\hourly\dt=2022-08-06\hr=21\emp_data.csv',
	'emp_data.csv',
	'2022-08-06', 
	'21'

from temp_emp_table_inc;


Truncate table temp_emp_table_inc ;



	


INFO:root:TABLE_LOAD :: Executing SQL file  :update_insert_final_emp_tbl_inc.sqlfor load dated : 2022-08-06 21:00:00
INFO:root:This is info message -- file_read_sql -- D:\Project_EDM\SQL\incremental\table_load\update_insert_final_emp_tbl_inc.sql
INFO:root:reading sql file/query/*
MERGE INTO  final_emp_table_inc f
USING (
		  SELECT  r.emp_id as mergekey, r.*
		  FROM raw_emp_table_inc r

		  UNION ALL

		  SELECT NULL as mergeKey, r.*
		  FROM raw_emp_table_inc  r JOIN final_emp_table_inc f
		  ON r.emp_id = f.emp_id
		  WHERE f.active_flag = 'Y' AND r.creation_timestamp > f.creation_timestamp And
										  (
											r.name  <>  f.name  or 
											r.gender  <>  f.gender  or  
											r.dob  <>  f.dob  or 
											r.age  <>  f.age  or  
											r.father_name  <>  f.father_name  or  
											r.salary  <>  f.salary  or  
											r.city  <>  f.city  or 
											r.[state]  <>  f.[state]  or 
											r.phno  <>  f.phno  or  
											r.company_id  <>  f.company_id   
										) 
			group by    
						r. emp_id, 
						r. name,
						r. gender, 
						r. dob, 
						r. age, 
						r. father_name, 
						r. salary, 
						r. city, 
						r. [state], 
						r. phno, 
						r. company_id, 
						r. creation_timestamp, 
						r. record_audit_TS, 
						r. file_path, 
						r. [file_name], 
						r. dt, 
						r. hr
			Having r.record_audit_ts = max(r.record_audit_ts)
		) s
ON f.emp_id = s.mergekey

WHEN MATCHED AND f.active_flag = 'Y' AND s.creation_timestamp > f.creation_timestamp And
										  (
											s. name  <>  f.name  or 
											s. gender  <>  f.gender  or  
											s. dob  <>  f.dob  or 
											s. age  <>  f.age  or  
											s. father_name  <>  f.father_name  or  
											s. salary  <>  f.salary  or  
											s. city  <>  f.city  or 
											s. [state]  <>  f.[state]  or 
											s. phno  <>  f.phno  or  
											s. company_id  <>  f.company_id   
										) 
	 THEN  
		  UPDATE 
				SET f.active_flag = 'N' 

WHEN NOT MATCHED 
				THEN 
					Insert 
					(
						emp_id, 
						name,
						gender, 
						dob, 
						age, 
						father_name, 
						salary, 
						city, 
						[state], 
						phno, 
						company_id, 
						creation_timestamp,  
						file_path, 
						[file_name], 
						dt, 
						hr,
						i_u_action, 
						active_flag, 
						record_audit_TS 
					)
				 values
				  (
					s. emp_id, 
					s. name,
					s. gender, 
					s. dob, 
					s. age, 
					s. father_name, 
					s. salary, 
					s. city, 
					s. [state], 
					s. phno, 
					s. company_id, 
					s. creation_timestamp,  
					s. file_path, 
					s. [file_name], 
					s. dt, 
					s. hr,
					case when s.emp_id in (select Distinct emp_id From  final_emp_table_inc ) Then 'U'
						else 'I'
						end ,
					'Y', 
					getdate() 
						 );
*/



/*

MERGE INTO  final_emp_table_inc f
USING (
		  SELECT  r.emp_id as mergekey, r.*
		  FROM raw_emp_table_inc r

		  UNION ALL

		  SELECT NULL as mergeKey, r.*
		  FROM raw_emp_table_inc  r JOIN final_emp_table_inc f
		  ON r.emp_id = f.emp_id
		  WHERE f.active_flag = 'Y' AND r.creation_timestamp > f.creation_timestamp And
										  (
											Concat ( coalesce(f.emp_id, ''), coalesce(f.name, ''), coalesce(f.gender, ''),  coalesce(f.dob, ''),  coalesce(f.age, ''),  coalesce(f.father_name, ''),  coalesce(f.salary, ''),  coalesce(f.city, ''),  coalesce(f.[state], ''),  coalesce(f.phno, ''),  coalesce(f.company_id, ''))
											<>
											Concat ( coalesce(r.emp_id, ''), coalesce(r.name, ''), coalesce(r.gender, ''),  coalesce(r.dob, ''),  coalesce(r.age, ''),  coalesce(r.father_name, ''),  coalesce(r.salary, ''),  coalesce(r.city, ''),  coalesce(r.[state], ''),  coalesce(r.phno, ''),  coalesce(r.company_id, ''))

										) 
			group by    
						r. emp_id, 
						r. name,
						r. gender, 
						r. dob, 
						r. age, 
						r. father_name, 
						r. salary, 
						r. city, 
						r. [state], 
						r. phno, 
						r. company_id, 
						r. creation_timestamp, 
						r. record_audit_TS, 
						r. file_path, 
						r. [file_name], 
						r. dt, 
						r. hr
			Having r.record_audit_ts = max(r.record_audit_ts)
		) s
ON f.emp_id = s.mergekey

WHEN MATCHED AND f.active_flag = 'Y' AND s.creation_timestamp > f.creation_timestamp And
										  (
											Concat ( coalesce(f.emp_id, ''), coalesce(f.name, ''), coalesce(f.gender, ''),  coalesce(f.dob, ''),  coalesce(f.age, ''),  coalesce(f.father_name, ''),  coalesce(f.salary, ''),  coalesce(f.city, ''),  coalesce(f.[state], ''),  coalesce(f.phno, ''),  coalesce(f.company_id, ''))
											<>
											Concat ( coalesce(s.emp_id, ''), coalesce(s.name, ''), coalesce(s.gender, ''),  coalesce(s.dob, ''),  coalesce(s.age, ''),  coalesce(s.father_name, ''),  coalesce(s.salary, ''),  coalesce(s.city, ''),  coalesce(s.[state], ''),  coalesce(s.phno, ''),  coalesce(s.company_id, ''))

										) 
	 THEN  
		  UPDATE 
				SET f.active_flag = 'N' 

WHEN NOT MATCHED 
				THEN 
					Insert 
					(
						emp_id, 
						name,
						gender, 
						dob, 
						age, 
						father_name, 
						salary, 
						city, 
						[state], 
						phno, 
						company_id, 
						creation_timestamp,  
						file_path, 
						[file_name], 
						dt, 
						hr,
						i_u_action, 
						active_flag, 
						record_audit_TS 
					)
				 values
				  (
					s. emp_id, 
					s. name,
					s. gender, 
					s. dob, 
					s. age, 
					s. father_name, 
					s. salary, 
					s. city, 
					s. [state], 
					s. phno, 
					s. company_id, 
					s. creation_timestamp,  
					s. file_path, 
					s. [file_name], 
					s. dt, 
					s. hr,
					case when s.emp_id in (select Distinct emp_id From  final_emp_table_inc ) Then 'U'
						else 'I'
						end ,
					'Y', 
					getdate() 
						 );



--Select * from final_emp_table_inc


*/


Select Distinct
		r.emp_id, 
		r.name,
		r.gender, 
		r.dob, 
		r.age, 
		r.father_name, 
		r.salary, 
		r.city, 
		r.[state], 
		r.phno, 
		r.company_id, 
		r.creation_timestamp,  
		r.file_path, 
		r.[file_name], 
		r.dt, 
		r.hr,
		case when f.emp_id is null then 'I' 
			else 'U' 
		end as I_U_action_flag ,
		getdate() as record_audit_ts_stage
	into stage_emp_table_inc
From raw_emp_table_inc r left join final_emp_table_inc f
on r.emp_id = f.emp_id
where r.dt = '{dt}' and r.hr = '{hr}' and active_flag = 'Y'  and 
									(
										Concat ( coalesce(f.emp_id, ''), coalesce(f.name, ''), coalesce(f.gender, ''),  coalesce(f.dob, ''),  coalesce(f.age, ''),  coalesce(f.father_name, ''),  coalesce(f.salary, ''),  coalesce(f.city, ''),  coalesce(f.[state], ''),  coalesce(f.phno, ''),  coalesce(f.company_id, ''),  coalesce(f.creation_timestamp, ''))
										<>
										Concat ( coalesce(r.emp_id, ''), coalesce(r.name, ''), coalesce(r.gender, ''),  coalesce(r.dob, ''),  coalesce(r.age, ''),  coalesce(r.father_name, ''),  coalesce(r.salary, ''),  coalesce(r.city, ''),  coalesce(r.[state], ''),  coalesce(r.phno, ''),  coalesce(r.company_id, ''),  coalesce(r.creation_timestamp, ''))
									)	

 ;




Update final_emp_table_inc
set active_flag = 'N'
from stage_emp_table_inc r join final_emp_table_inc f
on r.emp_id = f.emp_id
where	f.active_flag = 'Y' and 
		r.creation_timestamp > f.creation_timestamp and
		(
				Concat ( coalesce(f.emp_id, ''), coalesce(f.name, ''), coalesce(f.gender, ''),  coalesce(f.dob, ''),  coalesce(f.age, ''),  coalesce(f.father_name, ''),  coalesce(f.salary, ''),  coalesce(f.city, ''),  coalesce(f.[state], ''),  coalesce(f.phno, ''),  coalesce(f.company_id, ''))
				<>
				Concat ( coalesce(r.emp_id, ''), coalesce(r.name, ''), coalesce(r.gender, ''),  coalesce(r.dob, ''),  coalesce(r.age, ''),  coalesce(r.father_name, ''),  coalesce(r.salary, ''),  coalesce(r.city, ''),  coalesce(r.[state], ''),  coalesce(r.phno, ''),  coalesce(r.company_id, ''))
		)	; 




insert into final_emp_table_inc
(
		emp_id, 
		name,
		gender, 
		dob, 
		age, 
		father_name, 
		salary, 
		city, 
		[state], 
		phno, 
		company_id, 
		creation_timestamp,  
		file_path, 
		[file_name], 
		dt, 
		hr,
		i_u_action, 
		active_flag, 
		record_audit_TS_final 
	)

	select 
		r.emp_id, 
		r.name,
		r.gender, 
		r.dob, 
		r.age, 
		r.father_name, 
		r.salary, 
		r.city, 
		r.[state], 
		r.phno, 
		r.company_id, 
		r.creation_timestamp,  
		r.file_path, 
		r.[file_name], 
		r.dt, 
		r.hr,
		case when r.emp_id in (select Distinct emp_id From  final_emp_table_inc ) Then 'U'
						else 'I'
						end ,
		'Y', 
		getdate() 
from stage_emp_table_inc r left join final_emp_table_inc f
on r.emp_id = f.emp_id
where r.emp_id not in ( select distinct emp_id from final_emp_table_inc )	
	or
		(	
			r.creation_timestamp > f.creation_timestamp and
				(
						Concat ( coalesce(f.emp_id, ''), coalesce(f.name, ''), coalesce(f.gender, ''),  coalesce(f.dob, ''),  coalesce(f.age, ''),  coalesce(f.father_name, ''),  coalesce(f.salary, ''),  coalesce(f.city, ''),  coalesce(f.[state], ''),  coalesce(f.phno, ''),  coalesce(f.company_id, ''))
						<>
						Concat ( coalesce(r.emp_id, ''), coalesce(r.name, ''), coalesce(r.gender, ''),  coalesce(r.dob, ''),  coalesce(r.age, ''),  coalesce(r.father_name, ''),  coalesce(r.salary, ''),  coalesce(r.city, ''),  coalesce(r.[state], ''),  coalesce(r.phno, ''),  coalesce(r.company_id, ''))
				)	 
		);


Drop Table stage_emp_table_inc;










INFO:root:Inserting data into  table/*
MERGE INTO  final_emp_table_inc f
USING (
		  SELECT  r.emp_id as mergekey, r.*
		  FROM raw_emp_table_inc r

		  UNION ALL

		  SELECT NULL as mergeKey, r.*
		  FROM raw_emp_table_inc  r JOIN final_emp_table_inc f
		  ON r.emp_id = f.emp_id
		  WHERE f.active_flag = 'Y' AND r.creation_timestamp > f.creation_timestamp And
										  (
											r.name  <>  f.name  or 
											r.gender  <>  f.gender  or  
											r.dob  <>  f.dob  or 
											r.age  <>  f.age  or  
											r.father_name  <>  f.father_name  or  
											r.salary  <>  f.salary  or  
											r.city  <>  f.city  or 
											r.[state]  <>  f.[state]  or 
											r.phno  <>  f.phno  or  
											r.company_id  <>  f.company_id   
										) 
			group by    
						r. emp_id, 
						r. name,
						r. gender, 
						r. dob, 
						r. age, 
						r. father_name, 
						r. salary, 
						r. city, 
						r. [state], 
						r. phno, 
						r. company_id, 
						r. creation_timestamp, 
						r. record_audit_TS, 
						r. file_path, 
						r. [file_name], 
						r. dt, 
						r. hr
			Having r.record_audit_ts = max(r.record_audit_ts)
		) s
ON f.emp_id = s.mergekey

WHEN MATCHED AND f.active_flag = 'Y' AND s.creation_timestamp > f.creation_timestamp And
										  (
											s. name  <>  f.name  or 
											s. gender  <>  f.gender  or  
											s. dob  <>  f.dob  or 
											s. age  <>  f.age  or  
											s. father_name  <>  f.father_name  or  
											s. salary  <>  f.salary  or  
											s. city  <>  f.city  or 
											s. [state]  <>  f.[state]  or 
											s. phno  <>  f.phno  or  
											s. company_id  <>  f.company_id   
										) 
	 THEN  
		  UPDATE 
				SET f.active_flag = 'N' 

WHEN NOT MATCHED 
				THEN 
					Insert 
					(
						emp_id, 
						name,
						gender, 
						dob, 
						age, 
						father_name, 
						salary, 
						city, 
						[state], 
						phno, 
						company_id, 
						creation_timestamp,  
						file_path, 
						[file_name], 
						dt, 
						hr,
						i_u_action, 
						active_flag, 
						record_audit_TS 
					)
				 values
				  (
					s. emp_id, 
					s. name,
					s. gender, 
					s. dob, 
					s. age, 
					s. father_name, 
					s. salary, 
					s. city, 
					s. [state], 
					s. phno, 
					s. company_id, 
					s. creation_timestamp,  
					s. file_path, 
					s. [file_name], 
					s. dt, 
					s. hr,
					case when s.emp_id in (select Distinct emp_id From  final_emp_table_inc ) Then 'U'
						else 'I'
						end ,
					'Y', 
					getdate() 
						 );
*/



/*

MERGE INTO  final_emp_table_inc f
USING (
		  SELECT  r.emp_id as mergekey, r.*
		  FROM raw_emp_table_inc r

		  UNION ALL

		  SELECT NULL as mergeKey, r.*
		  FROM raw_emp_table_inc  r JOIN final_emp_table_inc f
		  ON r.emp_id = f.emp_id
		  WHERE f.active_flag = 'Y' AND r.creation_timestamp > f.creation_timestamp And
										  (
											Concat ( coalesce(f.emp_id, ''), coalesce(f.name, ''), coalesce(f.gender, ''),  coalesce(f.dob, ''),  coalesce(f.age, ''),  coalesce(f.father_name, ''),  coalesce(f.salary, ''),  coalesce(f.city, ''),  coalesce(f.[state], ''),  coalesce(f.phno, ''),  coalesce(f.company_id, ''))
											<>
											Concat ( coalesce(r.emp_id, ''), coalesce(r.name, ''), coalesce(r.gender, ''),  coalesce(r.dob, ''),  coalesce(r.age, ''),  coalesce(r.father_name, ''),  coalesce(r.salary, ''),  coalesce(r.city, ''),  coalesce(r.[state], ''),  coalesce(r.phno, ''),  coalesce(r.company_id, ''))

										) 
			group by    
						r. emp_id, 
						r. name,
						r. gender, 
						r. dob, 
						r. age, 
						r. father_name, 
						r. salary, 
						r. city, 
						r. [state], 
						r. phno, 
						r. company_id, 
						r. creation_timestamp, 
						r. record_audit_TS, 
						r. file_path, 
						r. [file_name], 
						r. dt, 
						r. hr
			Having r.record_audit_ts = max(r.record_audit_ts)
		) s
ON f.emp_id = s.mergekey

WHEN MATCHED AND f.active_flag = 'Y' AND s.creation_timestamp > f.creation_timestamp And
										  (
											Concat ( coalesce(f.emp_id, ''), coalesce(f.name, ''), coalesce(f.gender, ''),  coalesce(f.dob, ''),  coalesce(f.age, ''),  coalesce(f.father_name, ''),  coalesce(f.salary, ''),  coalesce(f.city, ''),  coalesce(f.[state], ''),  coalesce(f.phno, ''),  coalesce(f.company_id, ''))
											<>
											Concat ( coalesce(s.emp_id, ''), coalesce(s.name, ''), coalesce(s.gender, ''),  coalesce(s.dob, ''),  coalesce(s.age, ''),  coalesce(s.father_name, ''),  coalesce(s.salary, ''),  coalesce(s.city, ''),  coalesce(s.[state], ''),  coalesce(s.phno, ''),  coalesce(s.company_id, ''))

										) 
	 THEN  
		  UPDATE 
				SET f.active_flag = 'N' 

WHEN NOT MATCHED 
				THEN 
					Insert 
					(
						emp_id, 
						name,
						gender, 
						dob, 
						age, 
						father_name, 
						salary, 
						city, 
						[state], 
						phno, 
						company_id, 
						creation_timestamp,  
						file_path, 
						[file_name], 
						dt, 
						hr,
						i_u_action, 
						active_flag, 
						record_audit_TS 
					)
				 values
				  (
					s. emp_id, 
					s. name,
					s. gender, 
					s. dob, 
					s. age, 
					s. father_name, 
					s. salary, 
					s. city, 
					s. [state], 
					s. phno, 
					s. company_id, 
					s. creation_timestamp,  
					s. file_path, 
					s. [file_name], 
					s. dt, 
					s. hr,
					case when s.emp_id in (select Distinct emp_id From  final_emp_table_inc ) Then 'U'
						else 'I'
						end ,
					'Y', 
					getdate() 
						 );



--Select * from final_emp_table_inc


*/


Select Distinct
		r.emp_id, 
		r.name,
		r.gender, 
		r.dob, 
		r.age, 
		r.father_name, 
		r.salary, 
		r.city, 
		r.[state], 
		r.phno, 
		r.company_id, 
		r.creation_timestamp,  
		r.file_path, 
		r.[file_name], 
		r.dt, 
		r.hr,
		case when f.emp_id is null then 'I' 
			else 'U' 
		end as I_U_action_flag ,
		getdate() as record_audit_ts_stage
	into stage_emp_table_inc
From raw_emp_table_inc r left join final_emp_table_inc f
on r.emp_id = f.emp_id
where r.dt = '2022-08-06' and r.hr = '21' and active_flag = 'Y'  and 
									(
										Concat ( coalesce(f.emp_id, ''), coalesce(f.name, ''), coalesce(f.gender, ''),  coalesce(f.dob, ''),  coalesce(f.age, ''),  coalesce(f.father_name, ''),  coalesce(f.salary, ''),  coalesce(f.city, ''),  coalesce(f.[state], ''),  coalesce(f.phno, ''),  coalesce(f.company_id, ''),  coalesce(f.creation_timestamp, ''))
										<>
										Concat ( coalesce(r.emp_id, ''), coalesce(r.name, ''), coalesce(r.gender, ''),  coalesce(r.dob, ''),  coalesce(r.age, ''),  coalesce(r.father_name, ''),  coalesce(r.salary, ''),  coalesce(r.city, ''),  coalesce(r.[state], ''),  coalesce(r.phno, ''),  coalesce(r.company_id, ''),  coalesce(r.creation_timestamp, ''))
									)	

 ;




Update final_emp_table_inc
set active_flag = 'N'
from stage_emp_table_inc r join final_emp_table_inc f
on r.emp_id = f.emp_id
where	f.active_flag = 'Y' and 
		r.creation_timestamp > f.creation_timestamp and
		(
				Concat ( coalesce(f.emp_id, ''), coalesce(f.name, ''), coalesce(f.gender, ''),  coalesce(f.dob, ''),  coalesce(f.age, ''),  coalesce(f.father_name, ''),  coalesce(f.salary, ''),  coalesce(f.city, ''),  coalesce(f.[state], ''),  coalesce(f.phno, ''),  coalesce(f.company_id, ''))
				<>
				Concat ( coalesce(r.emp_id, ''), coalesce(r.name, ''), coalesce(r.gender, ''),  coalesce(r.dob, ''),  coalesce(r.age, ''),  coalesce(r.father_name, ''),  coalesce(r.salary, ''),  coalesce(r.city, ''),  coalesce(r.[state], ''),  coalesce(r.phno, ''),  coalesce(r.company_id, ''))
		)	; 




insert into final_emp_table_inc
(
		emp_id, 
		name,
		gender, 
		dob, 
		age, 
		father_name, 
		salary, 
		city, 
		[state], 
		phno, 
		company_id, 
		creation_timestamp,  
		file_path, 
		[file_name], 
		dt, 
		hr,
		i_u_action, 
		active_flag, 
		record_audit_TS_final 
	)

	select 
		r.emp_id, 
		r.name,
		r.gender, 
		r.dob, 
		r.age, 
		r.father_name, 
		r.salary, 
		r.city, 
		r.[state], 
		r.phno, 
		r.company_id, 
		r.creation_timestamp,  
		r.file_path, 
		r.[file_name], 
		r.dt, 
		r.hr,
		case when r.emp_id in (select Distinct emp_id From  final_emp_table_inc ) Then 'U'
						else 'I'
						end ,
		'Y', 
		getdate() 
from stage_emp_table_inc r left join final_emp_table_inc f
on r.emp_id = f.emp_id
where r.emp_id not in ( select distinct emp_id from final_emp_table_inc )	
	or
		(	
			r.creation_timestamp > f.creation_timestamp and
				(
						Concat ( coalesce(f.emp_id, ''), coalesce(f.name, ''), coalesce(f.gender, ''),  coalesce(f.dob, ''),  coalesce(f.age, ''),  coalesce(f.father_name, ''),  coalesce(f.salary, ''),  coalesce(f.city, ''),  coalesce(f.[state], ''),  coalesce(f.phno, ''),  coalesce(f.company_id, ''))
						<>
						Concat ( coalesce(r.emp_id, ''), coalesce(r.name, ''), coalesce(r.gender, ''),  coalesce(r.dob, ''),  coalesce(r.age, ''),  coalesce(r.father_name, ''),  coalesce(r.salary, ''),  coalesce(r.city, ''),  coalesce(r.[state], ''),  coalesce(r.phno, ''),  coalesce(r.company_id, ''))
				)	 
		);


Drop Table stage_emp_table_inc;










INFO:root:Updating last_processed_file_ts :: Executing SQL file  :update_file_execution_audit_inc.sqlfor load dated : 2022-08-06 21:00:00
INFO:root:This is info message -- file_read_sql -- D:\Project_EDM\SQL\incremental\update_file_execution_audit_inc.sql
INFO:root:reading sql file/query

Update file_execution_audit_inc
Set last_processed_file = '{date_time}'
From file_execution_audit_inc 
where load_interval = 'hourly' and usecase_name = 'EDM'





INFO:root:Updating last processed file  into control table

Update file_execution_audit_inc
Set last_processed_file = '2022-08-06 21:00:00'
From file_execution_audit_inc 
where load_interval = 'hourly' and usecase_name = 'EDM'





